version: '3'

services:

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - monitoring
    #logging: *default-logging


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      #- '--web.console.templates=/usr/share/prometheus/consoles'
      # - '--web.enable-lifecycle'
      #- '--web.enable-admin-api'
      - '--web.enable-remote-write-receiver'
    networks:
      - monitoring
    #logging: *default-logging


  loki:
    image: grafana/loki
    container_name: loki
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml
    ports:
      - '3100:3100'
    restart: always
    networks:
      - monitoring

  promtail:
    image: grafana/promtail
    container_name: promtail
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log:/var/log:ro
      - ./loki/promtail-config.yaml:/etc/promtail/promtail-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/promtail-config.yaml
    restart: always
    networks:
      - monitoring
    #logging: *default-logging


volumes:
  grafana-storage: {}
  prometheus_data: {}

networks:
  monitoring:
    driver: bridge
